// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var t=function(){try{return e({},"x",{}),!0}catch(e){return!1}},r=Object.defineProperty,o=Object.prototype,n=o.toString,l=o.__defineGetter__,a=o.__defineSetter__,u=o.__lookupGetter__,i=o.__lookupSetter__;var c=r,f=function(e,t,r){var c,f,p,_;if("object"!=typeof e||null===e||"[object Array]"===n.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof r||null===r||"[object Array]"===n.call(r))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+r+"`.");if((f="value"in r)&&(u.call(e,t)||i.call(e,t)?(c=e.__proto__,e.__proto__=o,delete e[t],e[t]=r.value,e.__proto__=c):e[t]=r.value),p="get"in r,_="set"in r,f&&(p||_))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&l&&l.call(e,t,r.get),_&&a&&a.call(e,t,r.set),e},p=t()?c:f;var _=function(e,t,r){p(e,t,{configurable:!1,enumerable:!1,writable:!1,value:r})},y=Object.prototype.hasOwnProperty;var b=function(e,t){return null!=e&&y.call(e,t)};var v=function(){return"function"==typeof Symbol&&"symbol"==typeof Symbol("foo")&&b(Symbol,"iterator")&&"symbol"==typeof Symbol.iterator}()?Symbol.iterator:null;function d(){var e;return _(e={},"next",(function(){return{done:!0}})),_(e,"return",(function(e){if(arguments.length)return{value:e,done:!0};return{done:!0}})),v&&_(e,v,(function(){return d()})),e}export{d as default};
//# sourceMappingURL=mod.js.map
