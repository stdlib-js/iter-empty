// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var t=Object.defineProperty,r=Object.prototype,o=r.toString,n=r.__defineGetter__,l=r.__defineSetter__,a=r.__lookupGetter__,u=r.__lookupSetter__;var i=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?t:function(e,t,i){var c,f,p,_;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof i||null===i||"[object Array]"===o.call(i))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+i+"`.");if((f="value"in i)&&(a.call(e,t)||u.call(e,t)?(c=e.__proto__,e.__proto__=r,delete e[t],e[t]=i.value,e.__proto__=c):e[t]=i.value),p="get"in i,_="set"in i,f&&(p||_))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&n&&n.call(e,t,i.get),_&&l&&l.call(e,t,i.set),e};function c(e,t,r){i(e,t,{configurable:!1,enumerable:!1,writable:!1,value:r})}var f=Object.prototype.hasOwnProperty;var p,_,y="function"==typeof Symbol&&"symbol"==typeof Symbol("foo")&&(p=Symbol,_="iterator",null!=p&&f.call(p,_))&&"symbol"==typeof Symbol.iterator?Symbol.iterator:null;function b(){var e;return c(e={},"next",(function(){return{done:!0}})),c(e,"return",(function(e){if(arguments.length)return{value:e,done:!0};return{done:!0}})),y&&c(e,y,(function(){return b()})),e}export{b as default};
//# sourceMappingURL=mod.js.map
